{"ast":null,"code":"var _jsxFileName = \"/Users/hyerinhwang/Desktop/project/react/react-context-app/client/src/context/OrderContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderContext = /*#__PURE__*/createContext();\nexport function OrderContextProvider(props) {\n  _s();\n  const [orderCounts, setOrderCounts] = useState({\n    products: new Map(),\n    options: new Map()\n  });\n  const value = useMemo(() => {\n    function updateItemCount(itemName, newItemCount, orderType) {\n      const newOrderCounts = {\n        ...orderCounts\n      };\n      const orderCountsMap = orderCounts[orderType];\n      orderCountsMap.set(itemName, parseInt(newItemCount));\n      setOrderCounts(newOrderCounts);\n    }\n    return [{\n      ...orderCounts\n    }, updateItemCount];\n  }, [orderCounts]);\n  return /*#__PURE__*/_jsxDEV(OrderContext.Provider, {\n    value: value,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n}\n_s(OrderContextProvider, \"5Bs6MJGsCWW4+Dw9FINO8vXzvqU=\");\n_c = OrderContextProvider;\nvar _c;\n$RefreshReg$(_c, \"OrderContextProvider\");","map":{"version":3,"names":["createContext","useMemo","useState","jsxDEV","_jsxDEV","OrderContext","OrderContextProvider","props","_s","orderCounts","setOrderCounts","products","Map","options","value","updateItemCount","itemName","newItemCount","orderType","newOrderCounts","orderCountsMap","set","parseInt","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hyerinhwang/Desktop/project/react/react-context-app/client/src/context/OrderContext.js"],"sourcesContent":["import { createContext, useMemo, useState } from \"react\";\n\nconst OrderContext = createContext();\n\nexport function OrderContextProvider(props) {\n\n    const [orderCounts, setOrderCounts] = useState({\n        products: new Map(),\n        options: new Map()\n    })\n\n    const value = useMemo(() => {\n        function updateItemCount(itemName, newItemCount, orderType){\n            const newOrderCounts = { ...orderCounts };\n\n            const orderCountsMap = orderCounts[orderType];\n            orderCountsMap.set(itemName, parseInt(newItemCount));\n\n            setOrderCounts(newOrderCounts);\n        }\n\n\n        return [{ ...orderCounts }, updateItemCount]\n    }, [orderCounts])\n\n    return <OrderContext.Provider value={value} {...props} />\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,OAAO,SAASM,oBAAoBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAExC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC;IAC3CS,QAAQ,EAAE,IAAIC,GAAG,CAAC,CAAC;IACnBC,OAAO,EAAE,IAAID,GAAG,CAAC;EACrB,CAAC,CAAC;EAEF,MAAME,KAAK,GAAGb,OAAO,CAAC,MAAM;IACxB,SAASc,eAAeA,CAACC,QAAQ,EAAEC,YAAY,EAAEC,SAAS,EAAC;MACvD,MAAMC,cAAc,GAAG;QAAE,GAAGV;MAAY,CAAC;MAEzC,MAAMW,cAAc,GAAGX,WAAW,CAACS,SAAS,CAAC;MAC7CE,cAAc,CAACC,GAAG,CAACL,QAAQ,EAAEM,QAAQ,CAACL,YAAY,CAAC,CAAC;MAEpDP,cAAc,CAACS,cAAc,CAAC;IAClC;IAGA,OAAO,CAAC;MAAE,GAAGV;IAAY,CAAC,EAAEM,eAAe,CAAC;EAChD,CAAC,EAAE,CAACN,WAAW,CAAC,CAAC;EAEjB,oBAAOL,OAAA,CAACC,YAAY,CAACkB,QAAQ;IAACT,KAAK,EAAEA,KAAM;IAAA,GAAKP;EAAK;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAC7D;AAACnB,EAAA,CAtBeF,oBAAoB;AAAAsB,EAAA,GAApBtB,oBAAoB;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}